-- File generated by the BNF Converter (bnfc 2.9.3).
-- Templates for pattern matching on abstract syntax
{-# OPTIONS_GHC -fno-warn-unused-matches #-}

module Codegen.Pristinum.Skel where

import qualified Codegen.Pristinum.Abs
import Prelude
  ( Either (..),
    Show,
    String,
    show,
    ($),
    (++),
  )

type Err = Either String

type Result = Err String

failure :: Show a => a -> Result
failure x = Left $ "Undefined case: " ++ show x

transIDENT :: Codegen.Pristinum.Abs.IDENT -> Result
transIDENT x = case x of
  Codegen.Pristinum.Abs.IDENT string -> failure x

transProgram :: Codegen.Pristinum.Abs.Program -> Result
transProgram x = case x of
  Codegen.Pristinum.Abs.PProgram stmts -> failure x

transStmt :: Codegen.Pristinum.Abs.Stmt -> Result
transStmt x = case x of
  Codegen.Pristinum.Abs.SExpr expr -> failure x
  Codegen.Pristinum.Abs.SBind bind expr -> failure x
  Codegen.Pristinum.Abs.SAssign ident expr -> failure x
  Codegen.Pristinum.Abs.SIf expr stmts elifstmts -> failure x
  Codegen.Pristinum.Abs.SIfElse expr stmts1 elifstmts stmts2 -> failure x
  Codegen.Pristinum.Abs.SWhile expr stmts -> failure x
  Codegen.Pristinum.Abs.SReturn expr -> failure x
  Codegen.Pristinum.Abs.SReturnVoid -> failure x
  Codegen.Pristinum.Abs.SFunction ident binds type_ stmts -> failure x
  Codegen.Pristinum.Abs.SStruct ident binds -> failure x
  Codegen.Pristinum.Abs.SUnion ident binds -> failure x

transElifStmt :: Codegen.Pristinum.Abs.ElifStmt -> Result
transElifStmt x = case x of
  Codegen.Pristinum.Abs.ESElif expr stmts -> failure x

transExpr :: Codegen.Pristinum.Abs.Expr -> Result
transExpr x = case x of
  Codegen.Pristinum.Abs.ENil -> failure x
  Codegen.Pristinum.Abs.ETrue -> failure x
  Codegen.Pristinum.Abs.EFalse -> failure x
  Codegen.Pristinum.Abs.EChar char -> failure x
  Codegen.Pristinum.Abs.EInt integer -> failure x
  Codegen.Pristinum.Abs.EDouble double -> failure x
  Codegen.Pristinum.Abs.EString string -> failure x
  Codegen.Pristinum.Abs.EIdent ident -> failure x
  Codegen.Pristinum.Abs.ECall ident exprs -> failure x
  Codegen.Pristinum.Abs.ESizeof type_ -> failure x
  Codegen.Pristinum.Abs.EDecr expr -> failure x
  Codegen.Pristinum.Abs.EIncr expr -> failure x
  Codegen.Pristinum.Abs.EBitNot expr -> failure x
  Codegen.Pristinum.Abs.ENot expr -> failure x
  Codegen.Pristinum.Abs.EAdd expr1 expr2 -> failure x
  Codegen.Pristinum.Abs.ESubtract expr1 expr2 -> failure x
  Codegen.Pristinum.Abs.EMultiply expr1 expr2 -> failure x
  Codegen.Pristinum.Abs.EDivide expr1 expr2 -> failure x
  Codegen.Pristinum.Abs.EMod expr1 expr2 -> failure x
  Codegen.Pristinum.Abs.EPower expr1 expr2 -> failure x
  Codegen.Pristinum.Abs.EBitShl expr1 expr2 -> failure x
  Codegen.Pristinum.Abs.EBitShr expr1 expr2 -> failure x
  Codegen.Pristinum.Abs.EBitAnd expr1 expr2 -> failure x
  Codegen.Pristinum.Abs.EBitOr expr1 expr2 -> failure x
  Codegen.Pristinum.Abs.EBitXor expr1 expr2 -> failure x
  Codegen.Pristinum.Abs.EEqual expr1 expr2 -> failure x
  Codegen.Pristinum.Abs.ENotEqual expr1 expr2 -> failure x
  Codegen.Pristinum.Abs.ELess expr1 expr2 -> failure x
  Codegen.Pristinum.Abs.EGreater expr1 expr2 -> failure x
  Codegen.Pristinum.Abs.ELessEqual expr1 expr2 -> failure x
  Codegen.Pristinum.Abs.EGreaterEqual expr1 expr2 -> failure x
  Codegen.Pristinum.Abs.EAnd expr1 expr2 -> failure x
  Codegen.Pristinum.Abs.EOr expr1 expr2 -> failure x

transBind :: Codegen.Pristinum.Abs.Bind -> Result
transBind x = case x of
  Codegen.Pristinum.Abs.BBind ident type_ -> failure x

transType :: Codegen.Pristinum.Abs.Type -> Result
transType x = case x of
  Codegen.Pristinum.Abs.TVoid -> failure x
  Codegen.Pristinum.Abs.TBool -> failure x
  Codegen.Pristinum.Abs.TChar -> failure x
  Codegen.Pristinum.Abs.TInt8 -> failure x
  Codegen.Pristinum.Abs.TInt16 -> failure x
  Codegen.Pristinum.Abs.TInt32 -> failure x
  Codegen.Pristinum.Abs.TInt64 -> failure x
  Codegen.Pristinum.Abs.TUint8 -> failure x
  Codegen.Pristinum.Abs.TUint16 -> failure x
  Codegen.Pristinum.Abs.TUint32 -> failure x
  Codegen.Pristinum.Abs.TUint64 -> failure x
  Codegen.Pristinum.Abs.TFloat32 -> failure x
  Codegen.Pristinum.Abs.TFloat64 -> failure x
  Codegen.Pristinum.Abs.TPointer type_ -> failure x
  Codegen.Pristinum.Abs.TStruct ident -> failure x
  Codegen.Pristinum.Abs.TUnion ident -> failure x
